// <auto-generated />
using System;
using AviaSales.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AviaSales.Data.Migrations
{
    [DbContext(typeof(AviaSalesContext))]
    [Migration("20220521105204_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AviaSales.Data.Models.Passenger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("AviaSales.Data.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("ArriveTownId")
                        .HasColumnType("int");

                    b.Property<int?>("DepartTownId")
                        .HasColumnType("int");

                    b.Property<int>("TicketNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArriveTownId");

                    b.HasIndex("DepartTownId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("AviaSales.Data.Models.Town", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Towns");
                });

            modelBuilder.Entity("AviaSales.Data.Models.Ticket", b =>
                {
                    b.HasOne("AviaSales.Data.Models.Town", "ArriveTown")
                        .WithMany("ArriveTickets")
                        .HasForeignKey("ArriveTownId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AviaSales.Data.Models.Town", "DepartTown")
                        .WithMany("DepartTickets")
                        .HasForeignKey("DepartTownId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AviaSales.Data.Models.Passenger", "Passenger")
                        .WithOne("Ticket")
                        .HasForeignKey("AviaSales.Data.Models.Ticket", "Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ArriveTown");

                    b.Navigation("DepartTown");

                    b.Navigation("Passenger");
                });

            modelBuilder.Entity("AviaSales.Data.Models.Passenger", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("AviaSales.Data.Models.Town", b =>
                {
                    b.Navigation("ArriveTickets");

                    b.Navigation("DepartTickets");
                });
#pragma warning restore 612, 618
        }
    }
}
